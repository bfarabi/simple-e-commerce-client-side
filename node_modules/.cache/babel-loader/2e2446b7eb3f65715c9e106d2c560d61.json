{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./firebase.config\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\";\nexport const initializeLoginFrame = () => {\n  initializeApp(firebaseConfig);\n\n  if (firebase.Apps.length) {\n    initializeApp(firebaseConfig);\n  }\n};\nexport const handleSignIn = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  return signInWithPopup(auth, provider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURl\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      photo: photoURl,\n      name: displayName,\n      email: email,\n      success: true\n    };\n    return signedInUser;\n  }).catch(error => {\n    const errorCode = error.code;\n    console.log(errorCode);\n    const errorMessage = error.message;\n    console.log(errorMessage);\n    const email = error.email;\n  });\n};\nexport const handleSignOut = () => {\n  const auth = getAuth();\n  return signOut(auth).then(() => {\n    const signOutUser = {\n      isSignedIn: false,\n      photo: \"\",\n      name: \"\",\n      email: \"\",\n      success: false\n    };\n    return signOutUser;\n  }).catch(error => {});\n}; //creating area\n// export const createWithEmailAndPassword = (name, email, password) => {\n//   const auth = getAuth();\n//   createUserWithEmailAndPassword(auth, name, email, password)\n//   .then(res => {\n//     const newUserInfo = res.user;\n//     newUserInfo.error = \"\";\n//     newUserInfo.success = true;\n//     updateUserName(name);\n//     return newUserInfo;\n//   })\n//   .catch((error) => {\n//     const newUserInfo = {};\n//     newUserInfo.error = \"Email already used\";\n//     newUserInfo.success = false;\n//     return newUserInfo;\n//   });\n// };\n// export const signInUserWithEmailAndPassword = (email, password) => {\n//   const auth = getAuth();\n//  return signInWithEmailAndPassword(auth, email, password)\n//   .then((res) => {\n//     const newUserInfo = res.user;\n//     newUserInfo.error = \"\";\n//     newUserInfo.success = true;\n//     return newUserInfo;\n//   })\n//   .catch((error) => {\n//     const newUserInfo = {};\n//     newUserInfo.error = \"Email already used\";\n//     newUserInfo.success = false;\n//     return newUserInfo;\n//   });\n// };\n// export const updateUserName = (name) => {\n//   const auth = getAuth();\n//   updateProfile(auth.currentUser, {\n//     displayName: name,\n//   })\n//     .then(() => {\n//       console.log(\"name update successfully\");\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// };","map":{"version":3,"sources":["G:/Simple React MS-7/ema-john- re/src/Components/Login/LoginManager.js"],"names":["initializeApp","firebaseConfig","getAuth","signInWithPopup","GoogleAuthProvider","signOut","initializeLoginFrame","firebase","Apps","length","handleSignIn","provider","auth","then","res","displayName","email","photoURl","user","signedInUser","isSignedIn","photo","name","success","catch","error","errorCode","code","console","log","errorMessage","message","handleSignOut","signOutUser"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SACIC,OADJ,EAEIC,eAFJ,EAGIC,kBAHJ,EAIIC,OAJJ,QAMS,eANT;AASA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtCN,EAAAA,aAAa,CAACC,cAAD,CAAb;;AACA,MAAIM,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBT,IAAAA,aAAa,CAACC,cAAD,CAAb;AACD;AACJ,CALM;AAQP,OAAO,MAAMS,YAAY,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAG,IAAIP,kBAAJ,EAAjB;AACE,QAAMQ,IAAI,GAAGV,OAAO,EAApB;AACA,SAAOC,eAAe,CAACS,IAAD,EAAOD,QAAP,CAAf,CACJE,IADI,CACCC,GAAG,IAAI;AACX,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,QAAmCH,GAAG,CAACI,IAA7C;AACA,UAAMC,YAAY,GAAG;AACnBC,MAAAA,UAAU,EAAE,IADO;AAEnBC,MAAAA,KAAK,EAAEJ,QAFY;AAGnBK,MAAAA,IAAI,EAAEP,WAHa;AAInBC,MAAAA,KAAK,EAAEA,KAJY;AAKnBO,MAAAA,OAAO,EAAE;AALU,KAArB;AAOA,WAAOJ,YAAP;AACD,GAXI,EAYJK,KAZI,CAYEC,KAAK,IAAI;AACd,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,UAAMI,YAAY,GAAGL,KAAK,CAACM,OAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACA,UAAMd,KAAK,GAAGS,KAAK,CAACT,KAApB;AACD,GAlBI,CAAP;AAmBD,CAtBE;AAuBJ,OAAO,MAAMgB,aAAa,GAAG,MAAM;AAC9B,QAAMpB,IAAI,GAAGV,OAAO,EAApB;AACD,SAAOG,OAAO,CAACO,IAAD,CAAP,CACHC,IADG,CACE,MAAM;AACV,UAAMoB,WAAW,GAAG;AAClBb,MAAAA,UAAU,EAAE,KADM;AAElBC,MAAAA,KAAK,EAAE,EAFW;AAGlBC,MAAAA,IAAI,EAAE,EAHY;AAIlBN,MAAAA,KAAK,EAAE,EAJW;AAKlBO,MAAAA,OAAO,EAAE;AALS,KAApB;AAOA,WAAOU,WAAP;AACD,GAVG,EAWHT,KAXG,CAWIC,KAAD,IAAW,CAAE,CAXhB,CAAP;AAYA,CAdG,C,CAgBJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase.config\";\r\nimport {\r\n    getAuth,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    signOut,\r\n    \r\n  } from \"firebase/auth\";\r\n  \r\n  \r\nexport const initializeLoginFrame = () => {\r\n    initializeApp(firebaseConfig);\r\n    if (firebase.Apps.length) {\r\n      initializeApp(firebaseConfig);\r\n    }\r\n};\r\n\r\n\r\nexport const handleSignIn = () => {\r\n    const provider = new GoogleAuthProvider();\r\n      const auth = getAuth();\r\n      return signInWithPopup(auth, provider)\r\n        .then(res => {\r\n          const { displayName, email, photoURl } = res.user;\r\n          const signedInUser = {\r\n            isSignedIn: true,\r\n            photo: photoURl,\r\n            name: displayName,\r\n            email: email,\r\n            success: true,\r\n          };\r\n          return signedInUser;\r\n        })\r\n        .catch(error => {\r\n          const errorCode = error.code;\r\n          console.log(errorCode);\r\n          const errorMessage = error.message;\r\n          console.log(errorMessage);\r\n          const email = error.email;\r\n        });\r\n    };\r\n   export const handleSignOut = () => {\r\n        const auth = getAuth();\r\n       return signOut(auth)\r\n          .then(() => {\r\n            const signOutUser = {\r\n              isSignedIn: false,\r\n              photo: \"\",\r\n              name: \"\",\r\n              email: \"\",\r\n              success: false,\r\n            };\r\n            return signOutUser;\r\n          })\r\n          .catch((error) => {});\r\n      };\r\n\r\n      //creating area\r\n\r\n      // export const createWithEmailAndPassword = (name, email, password) => {\r\n      //   const auth = getAuth();\r\n      //   createUserWithEmailAndPassword(auth, name, email, password)\r\n      //   .then(res => {\r\n      //     const newUserInfo = res.user;\r\n      //     newUserInfo.error = \"\";\r\n      //     newUserInfo.success = true;\r\n      //     updateUserName(name);\r\n      //     return newUserInfo;\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     const newUserInfo = {};\r\n      //     newUserInfo.error = \"Email already used\";\r\n      //     newUserInfo.success = false;\r\n      //     return newUserInfo;\r\n      //   });\r\n      // };\r\n\r\n      // export const signInUserWithEmailAndPassword = (email, password) => {\r\n      //   const auth = getAuth();\r\n      //  return signInWithEmailAndPassword(auth, email, password)\r\n      //   .then((res) => {\r\n      //     const newUserInfo = res.user;\r\n      //     newUserInfo.error = \"\";\r\n      //     newUserInfo.success = true;\r\n      //     return newUserInfo;\r\n          \r\n      //   })\r\n      //   .catch((error) => {\r\n      //     const newUserInfo = {};\r\n      //     newUserInfo.error = \"Email already used\";\r\n      //     newUserInfo.success = false;\r\n      //     return newUserInfo;\r\n      //   });\r\n      // };\r\n      // export const updateUserName = (name) => {\r\n      //   const auth = getAuth();\r\n      //   updateProfile(auth.currentUser, {\r\n      //     displayName: name,\r\n      //   })\r\n      //     .then(() => {\r\n      //       console.log(\"name update successfully\");\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       console.log(error);\r\n      //     });\r\n      // };"]},"metadata":{},"sourceType":"module"}