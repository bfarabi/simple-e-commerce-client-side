{"ast":null,"code":"var getUser=function getUser(){var existingUser=sessionStorage.getItem('userId');if(existingUser){return existingUser;}else{var newUser='user-'+new Date().getTime();sessionStorage.setItem('userId',newUser);return newUser;}};var getDataKey=function getDataKey(){var userId=getUser();return\"emaJohn/carts/\".concat(userId);};// push to local storage: a temporary place for \nvar getCart=function getCart(){var dataKey=getDataKey();var data=localStorage.getItem(dataKey)||\"{}\";return JSON.parse(data);};var addToCart=function addToCart(key,count){var currentCart=getCart();currentCart[key]=count;localStorage.setItem(getDataKey(),JSON.stringify(currentCart));};var removeFromCart=function removeFromCart(key){var currentCart=getCart();delete currentCart[key];localStorage.setItem(getDataKey(),JSON.stringify(currentCart));};var processOrder=function processOrder(cart){localStorage.removeItem(getDataKey());};export{addToCart,getCart,removeFromCart,processOrder};// polyfill to support older browser\nvar localStorage=window.localStorage||function(){var store={};return{getItem:function getItem(key){return store[key];},setItem:function setItem(key,value){store[key]=value.toString();},clear:function clear(){store={};}};}();var sessionStorage=window.sessionStorage||function(){var store={};return{getItem:function getItem(key){return store[key];},setItem:function setItem(key,value){store[key]=value.toString();},clear:function clear(){store={};}};}();// end of poly fill","map":{"version":3,"sources":["G:/Simple React MS-7/ema-jhon/src/utilities/databaseManager.js"],"names":["getUser","existingUser","sessionStorage","getItem","newUser","Date","getTime","setItem","getDataKey","userId","getCart","dataKey","data","localStorage","JSON","parse","addToCart","key","count","currentCart","stringify","removeFromCart","processOrder","cart","removeItem","window","store","value","toString","clear"],"mappings":"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","sourcesContent":["const getUser = () => {\n    const existingUser = sessionStorage.getItem('userId');\n    if (existingUser) {\n        return existingUser; \n    } else {\n        const newUser = 'user-' + new Date().getTime();\n        sessionStorage.setItem('userId', newUser)\n        return newUser;\n    }\n}\n\n\nconst getDataKey = () => {\n    const userId = getUser();\n    return `emaJohn/carts/${userId}`\n}\n\n// push to local storage: a temporary place for \nconst getCart = () => {\n    const dataKey = getDataKey();\n    const data = localStorage.getItem(dataKey) || \"{}\";\n    return JSON.parse(data);\n}\n\nconst addToCart = (key, count) => {\n    const currentCart = getCart();\n    currentCart[key] = count;\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst removeFromCart = key => {\n    const currentCart = getCart();\n    delete currentCart[key];\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst processOrder = (cart) => {\n    localStorage.removeItem(getDataKey());\n}\n\n\nexport { addToCart, getCart, removeFromCart, processOrder };\n\n\n// polyfill to support older browser\nconst localStorage = window.localStorage || (() => {\n  let store = {}\n  return {\n    getItem(key) {\n      return store[key]\n    },\n    setItem(key, value) {\n      store[key] = value.toString()\n    },\n    clear() {\n      store = {}\n    }\n  };\n})()\n\nconst sessionStorage = window.sessionStorage || (() => {\n  let store = {}\n  return {\n    getItem(key) {\n      return store[key]\n    },\n    setItem(key, value) {\n      store[key] = value.toString()\n    },\n    clear() {\n      store = {}\n    }\n  };\n})()\n// end of poly fill"]},"metadata":{},"sourceType":"module"}