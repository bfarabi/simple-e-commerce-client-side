{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./firebase.config\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nexport const initializeLoginFrame = () => {\n  initializeApp(firebaseConfig);\n};\nexport const handleSignIn = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  signInWithPopup(auth, provider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURl\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      photo: photoURl,\n      name: displayName,\n      email: email\n    };\n    setUser(signedInUser);\n  }).catch(error => {\n    const errorCode = error.code;\n    console.log(errorCode);\n    const errorMessage = error.message;\n    console.log(errorMessage);\n    const email = error.email;\n  });\n};\nexport const handleSignOut = () => {\n  const auth = getAuth();\n  signOut(auth).then(() => {\n    const signOutUser = {\n      isSignedIn: false,\n      photo: \"\",\n      name: \"\",\n      email: \"\"\n    };\n    setUser(signOutUser);\n  }).catch(error => {});\n};\nexport const creatUserWithEmailAndPassword = () => {\n  createUserWithEmailAndPassword(auth, user.email, user.password).then(userCredential => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    updateUserName(user.name);\n  }).catch(error => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = \"Email already used\";\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n};\nexport const signInUserWithEmailAndPassword = () => {\n  signInWithEmailAndPassword(auth, user.email, user.password).then(res => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    setLoggedInUser(newUserInfo);\n    navigate(from, {\n      replace: true\n    });\n  }).catch(error => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = \"Email already used\";\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n};","map":{"version":3,"sources":["G:/Simple React MS-7/ema-john- re/src/Components/Login/LoginManager.js"],"names":["initializeApp","firebaseConfig","getAuth","signInWithPopup","GoogleAuthProvider","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","initializeLoginFrame","handleSignIn","provider","auth","then","res","displayName","email","photoURl","user","signedInUser","isSignedIn","photo","name","setUser","catch","error","errorCode","code","console","log","errorMessage","message","handleSignOut","signOutUser","creatUserWithEmailAndPassword","password","userCredential","newUserInfo","success","updateUserName","signInUserWithEmailAndPassword","setLoggedInUser","navigate","from","replace"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase.config\";\r\nimport {\r\n    getAuth,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    signOut,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    updateProfile,\r\n  } from \"firebase/auth\";\r\n\r\nexport const initializeLoginFrame = () => {\r\n    initializeApp(firebaseConfig);\r\n};\r\n\r\nexport const handleSignIn = () => {\r\n    const provider = new GoogleAuthProvider();\r\n      const auth = getAuth();\r\n      signInWithPopup(auth, provider)\r\n        .then((res) => {\r\n          const { displayName, email, photoURl } = res.user;\r\n          const signedInUser = {\r\n            isSignedIn: true,\r\n            photo: photoURl,\r\n            name: displayName,\r\n            email: email,\r\n          };\r\n          setUser(signedInUser);\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          console.log(errorCode);\r\n          const errorMessage = error.message;\r\n          console.log(errorMessage);\r\n          const email = error.email;\r\n        });\r\n    };\r\n   export const handleSignOut = () => {\r\n        const auth = getAuth();\r\n        signOut(auth)\r\n          .then(() => {\r\n            const signOutUser = {\r\n              isSignedIn: false,\r\n              photo: \"\",\r\n              name: \"\",\r\n              email: \"\",\r\n            };\r\n            setUser(signOutUser);\r\n          })\r\n          .catch((error) => {});\r\n      };\r\n      export const creatUserWithEmailAndPassword = () => {\r\n        createUserWithEmailAndPassword(auth, user.email, user.password)\r\n        .then((userCredential) => {\r\n          const newUserInfo = { ...user };\r\n          newUserInfo.error = \"\";\r\n          newUserInfo.success = true;\r\n          setUser(newUserInfo);\r\n          updateUserName(user.name);\r\n        })\r\n        .catch((error) => {\r\n          const newUserInfo = { ...user };\r\n          newUserInfo.error = \"Email already used\";\r\n          newUserInfo.success = false;\r\n          setUser(newUserInfo);\r\n        });\r\n      };\r\n\r\n      export const signInUserWithEmailAndPassword = () => {\r\n        signInWithEmailAndPassword(auth, user.email, user.password)\r\n        .then((res) => {\r\n          const newUserInfo = { ...user };\r\n          newUserInfo.error = \"\";\r\n          newUserInfo.success = true;\r\n          setUser(newUserInfo);\r\n          setLoggedInUser(newUserInfo);\r\n          navigate(from, { replace: true });\r\n        })\r\n        .catch((error) => {\r\n          const newUserInfo = { ...user };\r\n          newUserInfo.error = \"Email already used\";\r\n          newUserInfo.success = false;\r\n          setUser(newUserInfo);\r\n        });\r\n      };"]},"metadata":{},"sourceType":"module"}