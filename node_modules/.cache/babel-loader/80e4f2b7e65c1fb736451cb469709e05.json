{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./firebase.config\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nexport const initializeLoginFrame = () => {\n  initializeApp(firebaseConfig);\n};\nexport const handleSignIn = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  return signInWithPopup(auth, provider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURl\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      photo: photoURl,\n      name: displayName,\n      email: email\n    };\n    return signedInUser;\n  }).catch(error => {\n    const errorCode = error.code;\n    console.log(errorCode);\n    const errorMessage = error.message;\n    console.log(errorMessage);\n    const email = error.email;\n  });\n};\nexport const handleSignOut = () => {\n  const auth = getAuth();\n  return signOut(auth).then(() => {\n    const signOutUser = {\n      isSignedIn: false,\n      photo: \"\",\n      name: \"\",\n      email: \"\"\n    };\n    return signOutUser;\n  }).catch(error => {});\n}; //   export const createUserWithEmailAndPassword = () => {\n//     // const auth = getAuth();\n//     createUserWithEmailAndPassword(auth, user.email, user.password)\n//     .then((userCredential) => {\n//       const newUserInfo = { ...user };\n//       newUserInfo.error = \"\";\n//       newUserInfo.success = true;\n//       setUser(newUserInfo);\n//       updateUserName(user.name);\n//     })\n//     .catch((error) => {\n//       const newUserInfo = { ...user };\n//       newUserInfo.error = \"Email already used\";\n//       newUserInfo.success = false;\n//       setUser(newUserInfo);\n//     });\n//   };\n//   export const signInWithEmailAndPassword = () => {\n//     signInWithEmailAndPassword(auth, user.email, user.password)\n//     .then((res) => {\n//       const newUserInfo = { ...user };\n//       newUserInfo.error = \"\";\n//       newUserInfo.success = true;\n//       setUser(newUserInfo);\n//       setLoggedInUser(newUserInfo);\n//       navigate(from, { replace: true });\n//     })\n//     .catch((error) => {\n//       const newUserInfo = { ...user };\n//       newUserInfo.error = \"Email already used\";\n//       newUserInfo.success = false;\n//       setUser(newUserInfo);\n//     });\n//   };\n//   export const updateUserName = (name) => {\n//     updateProfile(auth.currentUser, {\n//       displayName: name,\n//     })\n//       .then(() => {\n//         console.log(\"name update successfully\");\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };","map":{"version":3,"sources":["G:/Simple React MS-7/ema-john- re/src/Components/Login/LoginManager.js"],"names":["initializeApp","firebaseConfig","getAuth","signInWithPopup","GoogleAuthProvider","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","initializeLoginFrame","handleSignIn","provider","auth","then","res","displayName","email","photoURl","user","signedInUser","isSignedIn","photo","name","catch","error","errorCode","code","console","log","errorMessage","message","handleSignOut","signOutUser"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SACIC,OADJ,EAEIC,eAFJ,EAGIC,kBAHJ,EAIIC,OAJJ,EAKIC,8BALJ,EAMIC,0BANJ,EAOIC,aAPJ,QAQS,eART;AAUA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtCT,EAAAA,aAAa,CAACC,cAAD,CAAb;AACH,CAFM;AAIP,OAAO,MAAMS,YAAY,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAG,IAAIP,kBAAJ,EAAjB;AACE,QAAMQ,IAAI,GAAGV,OAAO,EAApB;AACA,SAAOC,eAAe,CAACS,IAAD,EAAOD,QAAP,CAAf,CACJE,IADI,CACEC,GAAD,IAAS;AACb,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,QAAmCH,GAAG,CAACI,IAA7C;AACA,UAAMC,YAAY,GAAG;AACnBC,MAAAA,UAAU,EAAE,IADO;AAEnBC,MAAAA,KAAK,EAAEJ,QAFY;AAGnBK,MAAAA,IAAI,EAAEP,WAHa;AAInBC,MAAAA,KAAK,EAAEA;AAJY,KAArB;AAMA,WAAOG,YAAP;AACD,GAVI,EAWJI,KAXI,CAWGC,KAAD,IAAW;AAChB,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,UAAMI,YAAY,GAAGL,KAAK,CAACM,OAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACA,UAAMb,KAAK,GAAGQ,KAAK,CAACR,KAApB;AACD,GAjBI,CAAP;AAkBD,CArBE;AAsBJ,OAAO,MAAMe,aAAa,GAAG,MAAM;AAC9B,QAAMnB,IAAI,GAAGV,OAAO,EAApB;AACD,SAAOG,OAAO,CAACO,IAAD,CAAP,CACHC,IADG,CACE,MAAM;AACV,UAAMmB,WAAW,GAAG;AAClBZ,MAAAA,UAAU,EAAE,KADM;AAElBC,MAAAA,KAAK,EAAE,EAFW;AAGlBC,MAAAA,IAAI,EAAE,EAHY;AAIlBN,MAAAA,KAAK,EAAE;AAJW,KAApB;AAMA,WAAOgB,WAAP;AACD,GATG,EAUHT,KAVG,CAUIC,KAAD,IAAW,CAAE,CAVhB,CAAP;AAWA,CAbG,C,CAeN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase.config\";\r\nimport {\r\n    getAuth,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    signOut,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    updateProfile,\r\n  } from \"firebase/auth\";\r\n\r\nexport const initializeLoginFrame = () => {\r\n    initializeApp(firebaseConfig);\r\n};\r\n\r\nexport const handleSignIn = () => {\r\n    const provider = new GoogleAuthProvider();\r\n      const auth = getAuth();\r\n      return signInWithPopup(auth, provider)\r\n        .then((res) => {\r\n          const { displayName, email, photoURl } = res.user;\r\n          const signedInUser = {\r\n            isSignedIn: true,\r\n            photo: photoURl,\r\n            name: displayName,\r\n            email: email,\r\n          };\r\n          return signedInUser;\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          console.log(errorCode);\r\n          const errorMessage = error.message;\r\n          console.log(errorMessage);\r\n          const email = error.email;\r\n        });\r\n    };\r\n   export const handleSignOut = () => {\r\n        const auth = getAuth();\r\n       return signOut(auth)\r\n          .then(() => {\r\n            const signOutUser = {\r\n              isSignedIn: false,\r\n              photo: \"\",\r\n              name: \"\",\r\n              email: \"\",\r\n            };\r\n            return signOutUser;\r\n          })\r\n          .catch((error) => {});\r\n      };\r\n\r\n    //   export const createUserWithEmailAndPassword = () => {\r\n    //     // const auth = getAuth();\r\n    //     createUserWithEmailAndPassword(auth, user.email, user.password)\r\n    //     .then((userCredential) => {\r\n    //       const newUserInfo = { ...user };\r\n    //       newUserInfo.error = \"\";\r\n    //       newUserInfo.success = true;\r\n    //       setUser(newUserInfo);\r\n    //       updateUserName(user.name);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       const newUserInfo = { ...user };\r\n    //       newUserInfo.error = \"Email already used\";\r\n    //       newUserInfo.success = false;\r\n    //       setUser(newUserInfo);\r\n    //     });\r\n    //   };\r\n\r\n    //   export const signInWithEmailAndPassword = () => {\r\n    //     signInWithEmailAndPassword(auth, user.email, user.password)\r\n    //     .then((res) => {\r\n    //       const newUserInfo = { ...user };\r\n    //       newUserInfo.error = \"\";\r\n    //       newUserInfo.success = true;\r\n    //       setUser(newUserInfo);\r\n    //       setLoggedInUser(newUserInfo);\r\n    //       navigate(from, { replace: true });\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       const newUserInfo = { ...user };\r\n    //       newUserInfo.error = \"Email already used\";\r\n    //       newUserInfo.success = false;\r\n    //       setUser(newUserInfo);\r\n    //     });\r\n    //   };\r\n    //   export const updateUserName = (name) => {\r\n    //     updateProfile(auth.currentUser, {\r\n    //       displayName: name,\r\n    //     })\r\n    //       .then(() => {\r\n    //         console.log(\"name update successfully\");\r\n    //       })\r\n    //       .catch((error) => {\r\n    //         console.log(error);\r\n    //       });\r\n    //   };"]},"metadata":{},"sourceType":"module"}