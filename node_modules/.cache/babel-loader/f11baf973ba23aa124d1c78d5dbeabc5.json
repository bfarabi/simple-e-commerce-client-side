{"ast":null,"code":"var _jsxFileName = \"G:\\\\Simple React MS-7\\\\ema-jhon\\\\src\\\\component\\\\ProcessPayment\\\\SimpleCardForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleCardForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleCardForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = SimpleCardForm;\nexport default SimpleCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleCardForm\");","map":{"version":3,"sources":["G:/Simple React MS-7/ema-jhon/src/component/ProcessPayment/SimpleCardForm.js"],"names":["React","CardElement","useStripe","useElements","SimpleCardForm","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBV,WAApB,CAApB,CAboC,CAepC;;AACA,UAAM;AAACW,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxCD;;GAAMD,c;UACWF,S,EACEC,W;;;KAFbC,c;AA0CN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\r\n\r\nconst SimpleCardForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleCardForm;"]},"metadata":{},"sourceType":"module"}