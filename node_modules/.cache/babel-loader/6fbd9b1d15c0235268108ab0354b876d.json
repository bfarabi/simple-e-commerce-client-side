{"ast":null,"code":"var _jsxFileName = \"G:\\\\Simple React MS-7\\\\ema-jhon\\\\src\\\\component\\\\Shipment\\\\Shipment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { UserContext } from '../../App';\nimport { getCart, processOrder } from '../../utilities/databaseManager';\nimport \"./Shipment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shipment = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const onSubmit = data => {\n    const savedCart = getCart();\n    const orderDetails = { ...loggedInUser,\n      products: savedCart,\n      shipment: data,\n      orderTime: new Date()\n    };\n    console.log(data, ' form submit kaku');\n    fetch('http://localhost:5000/addOrder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderDetails)\n    }).then(res => res.json()).then(data => {\n      if (data) {\n        processOrder();\n        alert('Your order place success');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ship-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: loggedInUser.name,\n      ...register(\"name\", {\n        required: true\n      }),\n      placeholder: \"Your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: \"Name is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: loggedInUser.email,\n      ...register(\"email\", {\n        required: true\n      }),\n      placeholder: \"Your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: \"Email is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"address\", {\n        required: true\n      }),\n      placeholder: \"Your address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), errors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: \"Address is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"phone\", {\n        required: true\n      }),\n      placeholder: \"Your phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: \"Phone number is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Shipment, \"ynwrbU6hU2MWDIz4Qth9VzkK500=\", false, function () {\n  return [useForm];\n});\n\n_c = Shipment;\nexport default Shipment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shipment\");","map":{"version":3,"sources":["G:/Simple React MS-7/ema-jhon/src/component/Shipment/Shipment.js"],"names":["React","useContext","useForm","UserContext","getCart","processOrder","Shipment","register","handleSubmit","watch","formState","errors","loggedInUser","setLoggedInUser","onSubmit","data","savedCart","orderDetails","products","shipment","orderTime","Date","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","alert","name","required","email","address","phone"],"mappings":"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","sourcesContent":["    import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { UserContext } from '../../App';\r\nimport { getCart, processOrder } from '../../utilities/databaseManager';\r\nimport \"./Shipment.css\";\r\n\r\n\r\n    \r\n\r\n    const Shipment = () => {\r\n        const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n        const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n        const onSubmit = data => {\r\n          const savedCart = getCart();\r\n          const orderDetails = {...loggedInUser, products: savedCart, shipment: data, orderTime: new Date()};\r\n            console.log(data, ' form submit kaku');\r\n          fetch('http://localhost:5000/addOrder', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(orderDetails)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n          if(data){\r\n            processOrder()\r\n            alert('Your order place success');\r\n          }\r\n        })\r\n\r\n      }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    \r\n    <form className=\"ship-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      \r\n      \r\n      <input defaultValue={loggedInUser.name} {...register(\"name\", { required: true })}  placeholder=\"Your name\" />\r\n      {errors.name && <span className=\"error\" >Name is required</span>}\r\n\r\n      <input defaultValue={loggedInUser.email} {...register(\"email\", { required: true })} placeholder=\"Your email\" />\r\n      {errors.email && <span className=\"error\" >Email is required</span>}\r\n\r\n      <input {...register(\"address\", { required: true })} placeholder=\"Your address\" />\r\n      {errors.address && <span className=\"error\" >Address is required</span>}\r\n\r\n      <input {...register(\"phone\", { required: true })} placeholder=\"Your phone number\" />\r\n      {errors.phone && <span className=\"error\" >Phone number is required</span>}\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n    };\r\n    \r\n    export default Shipment;"]},"metadata":{},"sourceType":"module"}