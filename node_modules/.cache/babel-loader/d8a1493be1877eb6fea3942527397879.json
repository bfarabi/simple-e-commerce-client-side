{"ast":null,"code":"var _jsxFileName = \"G:\\\\Simple React MS-7\\\\ema-jhon\\\\src\\\\component\\\\ProcessPayment\\\\SpliteCardForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { useStripe, useElements, CardNumberElement, CardCvcElement, CardExpiryElement } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useOptions = () => {\n  _s();\n\n  const options = useMemo(() => ({\n    style: {\n      base: {\n        fontSize: '16px',\n        color: \"#424770\",\n        letterSpacing: \"0.025em\",\n        fontFamily: \"Source Code Pro, monospace\",\n        \"::placeholder\": {\n          color: \"#aab7c4\"\n        }\n      },\n      invalid: {\n        color: \"#9e2146\"\n      }\n    }\n  }), []);\n  return options;\n};\n\n_s(useOptions, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\nconst SpliteCardForm = () => {\n  _s2();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const options = useOptions();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardNumberElement)\n    });\n    console.log(\"[PaymentMethod]\", payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Card number\", /*#__PURE__*/_jsxDEV(CardNumberElement, {\n        options: options,\n        onReady: () => {\n          console.log(\"CardNumberElement [ready]\");\n        },\n        onChange: event => {\n          console.log(\"CardNumberElement [change]\", event);\n        },\n        onBlur: () => {\n          console.log(\"CardNumberElement [blur]\");\n        },\n        onFocus: () => {\n          console.log(\"CardNumberElement [focus]\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Expiration date\", /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n        options: options,\n        onReady: () => {\n          console.log(\"CardNumberElement [ready]\");\n        },\n        onChange: event => {\n          console.log(\"CardNumberElement [change]\", event);\n        },\n        onBlur: () => {\n          console.log(\"CardNumberElement [blur]\");\n        },\n        onFocus: () => {\n          console.log(\"CardNumberElement [focus]\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"CVC\", /*#__PURE__*/_jsxDEV(CardCvcElement, {\n        options: options,\n        onReady: () => {\n          console.log(\"CardNumberElement [ready]\");\n        },\n        onChange: event => {\n          console.log(\"CardNumberElement [change]\", event);\n        },\n        onBlur: () => {\n          console.log(\"CardNumberElement [blur]\");\n        },\n        onFocus: () => {\n          console.log(\"CardNumberElement [focus]\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SpliteCardForm, \"r+jKkWNz2t2V+Hx3GVT/jR+/gNw=\", false, function () {\n  return [useStripe, useElements, useOptions];\n});\n\n_c = SpliteCardForm;\nexport default SpliteCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpliteCardForm\");","map":{"version":3,"sources":["G:/Simple React MS-7/ema-jhon/src/component/ProcessPayment/SpliteCardForm.js"],"names":["React","useMemo","useStripe","useElements","CardNumberElement","CardCvcElement","CardExpiryElement","useOptions","options","style","base","fontSize","color","letterSpacing","fontFamily","invalid","SpliteCardForm","stripe","elements","handleSubmit","event","preventDefault","payload","createPaymentMethod","type","card","getElement","console","log"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport {\r\n  useStripe,\r\n  useElements,\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement\r\n} from \"@stripe/react-stripe-js\";\r\n\r\n\r\n\r\nconst useOptions = () => {\r\n  \r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize: '16px',\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\"\r\n          }\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\"\r\n        }\r\n      }\r\n    }),\r\n    []\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst SpliteCardForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const payload = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardNumberElement)\r\n    });\r\n    console.log(\"[PaymentMethod]\", payload);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Card number\r\n        <CardNumberElement\r\n          options={options}\r\n          onReady={() => {\r\n            console.log(\"CardNumberElement [ready]\");\r\n          }}\r\n          onChange={event => {\r\n            console.log(\"CardNumberElement [change]\", event);\r\n          }}\r\n          onBlur={() => {\r\n            console.log(\"CardNumberElement [blur]\");\r\n          }}\r\n          onFocus={() => {\r\n            console.log(\"CardNumberElement [focus]\");\r\n          }}\r\n        />\r\n      </label>\r\n      <label>\r\n        Expiration date\r\n        <CardExpiryElement\r\n          options={options}\r\n          onReady={() => {\r\n            console.log(\"CardNumberElement [ready]\");\r\n          }}\r\n          onChange={event => {\r\n            console.log(\"CardNumberElement [change]\", event);\r\n          }}\r\n          onBlur={() => {\r\n            console.log(\"CardNumberElement [blur]\");\r\n          }}\r\n          onFocus={() => {\r\n            console.log(\"CardNumberElement [focus]\");\r\n          }}\r\n        />\r\n      </label>\r\n      <label>\r\n        CVC\r\n        <CardCvcElement\r\n          options={options}\r\n          onReady={() => {\r\n            console.log(\"CardNumberElement [ready]\");\r\n          }}\r\n          onChange={event => {\r\n            console.log(\"CardNumberElement [change]\", event);\r\n          }}\r\n          onBlur={() => {\r\n            console.log(\"CardNumberElement [blur]\");\r\n          }}\r\n          onFocus={() => {\r\n            console.log(\"CardNumberElement [focus]\");\r\n          }}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SpliteCardForm;\r\n"]},"metadata":{},"sourceType":"module"}